- name: Evaluate Service Monitor
  kubernetes.core.k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: false
    state: present
    namespace: '{{ main_project }}'
    resource_definition: "{{ lookup('template', item) }}"
  loop:
    - prometheus_service_monitor.yml.j2
    - strimzi_pod_monitor.yml.j2

- name: Get a list of all Secret objects
  kubernetes.core.k8s_info:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: false
    api_version: v1
    kind: Secret
    namespace: '{{ grafana_project }}'
  register: secrets_list

- name: Iterate over list of secrets until the correct string is found
  ansible.builtin.set_fact:
    secret_name: "{{ item['metadata']['name'] }}"
  loop: "{{ secrets_list.resources }}"
  when: item['metadata']['name'] | regex_search('grafana-serviceaccount-token.')

- name: Get Grafana ServiceAccount Token
  kubernetes.core.k8s_info:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: false
    kind: Secret
    name: '{{ secret_name }}'
    namespace: '{{ grafana_project }}'
    api_version: v1
  register: r_grafana_secret
  until:
    - r_grafana_secret.resources is defined
  retries: 10
  delay: 15

- name: Set grafana_token
  ansible.builtin.set_fact:
    grafana_token: '{{ r_grafana_secret.resources[0].data.token | b64decode }}'
  when:
    - r_grafana_secret.resources[0].data.token is defined

- name: Evaluate Grafana ServiceAccount permissons
  kubernetes.core.k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: false
    state: present
    api_version: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    definition:
      metadata:
        name: thanos-metric-viewer
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-monitoring-view
      subjects:
        - kind: ServiceAccount
          name: grafana-serviceaccount
          namespace: '{{ grafana_project }}'

- name: Evaluate Grafana Datasource
  kubernetes.core.k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: false
    state: present
    resource_definition: "{{ lookup('template', 'grafana_datasource.yml.j2') }}"

- name: Evaluate Dashboards
  kubernetes.core.k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: false
    state: present
    resource_definition: "{{ lookup('template', item) }}"
  loop:
    - dashboard_jvm.yml.j2
    - dashboard_third-party.yml.j2
    - dashboard_hl7.yml.j2

- name: Evaluate Kafka Dashboard
  kubernetes.core.k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: false
    state: present
    namespace: '{{ main_project }}'
    resource_definition: "{{ lookup('file', 'grafana_kafka_dashboard.yml') }}"
